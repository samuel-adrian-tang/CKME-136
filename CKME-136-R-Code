#CKME 136 - Laptimes at the Nurburgring

#import data
getwd() 
setwd("C:\\Users\\Samuel Tang\\Desktop\\CKME 136\\Dataset")
cleandata <- read.csv("lap_times (edited).csv")

#explore data
str(cleandata)
head(cleandata) 
tail(cleandata)
nrow(cleandata)
ncol(cleandata)

#basic summary and visualization, prelim analysis, w/ Time
summary(cleandata)
plot(cleandata$Position, cleandata$Time) #Direct relationship
plot(cleandata$Year, cleandata$Time) #weak negative relationship, represents other technological improvements, difficult to dissect
plot(cleandata$Make, cleandata$Time) #no clear relationship, there is little information to glean from this variable
plot(cleandata$Model, cleandata$Time) #no relationship, purely for the purposes of identification
plot(cleandata$Weight, cleandata$Time) #no clear relationship - Maybe important for clusters? May be useful to group into different seqmants
plot(cleandata$Turbocharger, cleandata$Time) #no clear relationship - must compare the three engine augmentation styles, Turbo, Super, Hybrid (Position, Time, Weight, HP, Torque)
plot(cleandata$Supercharger, cleandata$Time) #no clear relationship - must compare the three engine augmentation styles, Turbo, Super, Hybrid (Position, Time, Weight, HP, Torque)
plot(cleandata$Hybrid, cleandata$Time) #no clear relationship, only two examples - Need to explain advantages (torque+HP > weight?, prove by kg/hp?)
plot(cleandata$Powertrain, cleandata$Time) #V8 most popular, investigate averages (HP, Time, Position, weight) for each group
plot(cleandata$Engine_Layout, cleandata$Time) #no clear relationship investigate averages for each group
plot(cleandata$Horsepower, cleandata$Time) #weak negative trend - why is it not as obvious/strong?
plot(cleandata$Torque, cleandata$Time) #weak negative trend - why is it not as obvious/strong?
plot(cleandata$Drivetrain, cleandata$Time) #RWD most popular, inherantly by design, AWD is heavier but better traction
plot(cleandata$Body_Style, cleandata$Time) #Coupe is most popular, inherantly by design...lighter weight, investigate correlation between weight?
plot(cleandata$Manual_Transmission, cleandata$Time) #Manual transmission may increase time, investigate averages for groups
plot(cleandata$KGperHP, cleandata$Time) #Positive trend, ressembles a logarithmic function
plot(cleandata$Cylinders, cleandata$Time) #Weak negative trend, investigate averages for each group

#time(convert into seconds)
library(lubridate)
cleandata$Mins2Secs <- period_to_seconds(ms(cleandata$Time))

#Converting categorical variables, all examples of "Drivetrain" and "Engine_Layout" have been made into a variable, however one will be excluded during MLR sequences to avoid dummy variable trap
#No to body style, that is purely manufacturer choice, also mainly for identification purposes (some cars exist in multiple body styles)
cleandata$AWD = 0
cleandata$AWD[which(grepl("AWD", cleandata$Drivetrain))] = 1
cleandata$RWD = 0
cleandata$RWD[which(grepl("RWD", cleandata$Drivetrain))] = 1
cleandata$FWD = 0
cleandata$FWD[which(grepl("FWD", cleandata$Drivetrain))] = 1
cleandata$MidEngine = 0
cleandata$MidEngine[which(grepl("Mid-Engine", cleandata$Engine_Layout))] = 1
cleandata$RearEngine = 0
cleandata$RearEngine[which(grepl("Rear-Engine", cleandata$Engine_Layout))] = 1
cleandata$FrontEngine = 0
cleandata$FrontEngine[which(grepl("Front-Engine", cleandata$Engine_Layout))] = 1

#subset numeric attributes to allow for correlation analysis
allnumeric <- cleandata[,c(1,2,6:9,12,13,16:25)]
cormatrix  <- cor(allnumeric)

#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(cormatrix, method = "spearman") #spearman used to match the method used from "cor", also because the data is not normally distributed
#according to chart, the p-values indicate Hybrid(***), Horsepower(***), Torque(***), KGperHP(***), Cylinders(*), AWD(*), FWD(*), and MidEngine(*) are significant to time (in seconds)

#----------------------------------------------------------------------#

#Perform Feature-Selection Techniques for dimensionality reduction
#Three tests have been employed (MLR, Stepwise, Boruta), more can be done later.
#The general consensus is that Year, Weight (or KGperHP), Horsepower (or KGperHP), Cylinders, and MidEngine are the most valuable indicators. 
#Supercharger is questionable, need further investigation.

#FEATURING ALL VARIABLES, INCLUDING Horsepower, Weight, KGperHP
#---Basic Multiple Linear Regression---
alltimeMLR <- lm(Mins2Secs~Year+Weight+Turbocharger+Supercharger+Hybrid+Horsepower+Torque+Manual_Transmission+KGperHP+Cylinders+AWD+RWD+FWD+MidEngine+RearEngine+FrontEngine, allnumeric)
summary(alltimeMLR) #Year(**), Weight(*), Supercharger(*), Horsepower(**), Cylinders(.), MidEngine(*)

#---Stepwise Regression---
#install.packages("olsrr")
library("olsrr")
stepwisetime <- ols_step_both_p(alltimeMLR)
stepwisetime #Horsepower, Year, Weight, Supercharger, MidEngine, AWD

#---Boruta---, results were that Year, Weight, Horsepower, Torque, KGperHP, Cylinders, FWD, and MidEngine were significant to time
#install.packages("Boruta")
library(Boruta)
Borutatime <- Boruta(Mins2Secs~Year+Weight+Turbocharger+Supercharger+Hybrid+Horsepower+Torque+Manual_Transmission+KGperHP+Cylinders+AWD+RWD+FWD+MidEngine+RearEngine+FrontEngine, allnumeric)
boruta_signif <- getSelectedAttributes(Borutatime, withTentative = TRUE)
print(boruta_signif) 

#FEATURING Horsepower and Weight, BUT NOT INCLUDING KGperHP (This is to combat multicollinearity)
#---Basic Multiple Linear Regression---
mosttimeMLR <- lm(Mins2Secs~Year+Weight+Turbocharger+Supercharger+Hybrid+Horsepower+Torque+Manual_Transmission+Cylinders+AWD+RWD+FWD+MidEngine+RearEngine+FrontEngine, allnumeric)
summary(mosttimeMLR) #Year(**), Weight(***), Supercharger(*), Horsepower(***), Cylinders(*), MidEngine(*)

#---Stepwise Regression---
#install.packages("olsrr")
library("olsrr")
stepwisetime <- ols_step_both_p(mosttimeMLR)
stepwisetime #Horsepower, Year, Weight, Supercharger, MidEngine, AWD

#---Boruta---
#install.packages("Boruta")
library(Boruta)
Borutatime <- Boruta(Mins2Secs~Year+Weight+Turbocharger+Supercharger+Hybrid+Horsepower+Torque+Manual_Transmission+Cylinders+AWD+RWD+FWD+MidEngine+RearEngine+FrontEngine, allnumeric)
boruta_signif <- getSelectedAttributes(Borutatime, withTentative = TRUE)
print(boruta_signif) #Results were that Year, Weight, Horsepower, Torque, Cylinders, FWD, MidEngine, and FrontEngine were significant to time

#FEATURING KGperHP, BUT NOT INCLUDING Horsepower or Weight (This is to combat multicollinearity)
#---Basic Multiple Linear Regression---
sometimeMLR <- lm(Mins2Secs~Year+Turbocharger+Supercharger+Hybrid+Torque+Manual_Transmission+KGperHP+Cylinders+AWD+RWD+FWD+MidEngine+RearEngine+FrontEngine, allnumeric)
summary(sometimeMLR) #Year(***), Turbocharger(.), Supercharger(*), KGperHP(***), Cylinders(*), MidEngine(*)

#---Stepwise Regression---
#install.packages("olsrr")
library("olsrr")
stepwisetime <- ols_step_both_p(sometimeMLR)
stepwisetime #KGperHP, Year, Cylinders, Supercharger

#---Boruta---, results were that Year, Torque, KGperHP, Cylinders, FWD, MidEngine and FrontEngine, were significant to time
#install.packages("Boruta")
library(Boruta)
Borutatime <- Boruta(Mins2Secs~Year+Turbocharger+Supercharger+Hybrid+Torque+Manual_Transmission+KGperHP+Cylinders+AWD+RWD+FWD+MidEngine+RearEngine+FrontEngine, allnumeric)
boruta_signif <- getSelectedAttributes(Borutatime, withTentative = TRUE)
print(boruta_signif)

#----------------------------------------------------------------------#

#If we compare the results of the correlation chart and the Boruta/Stepwise Regression, we are left with the variables: KGperHP (or Horsepower and Weight), Cylinders, MidEngine, these variables were significant in both tests. The following were only significant in either: Year, Torque, Hybrid, AWD, FWD.

#Year is important as it captures some technological advances that are too difficult to capture with just the variables given (+)
#Torque affects accelaration significantly, even more so than Horsepower or HPperKG, must be included (+)
#Hybrid will not be considered as there are only two examples, there is just too limited examples (-)
#AWD has been known to improve traction and acceleration, it will be added (+)
#FWD will not be considered as there are only three examples, there is just too limited examples (-)

#The final list of variables to be considered (at this point) will be Horsepower, Weight, Cylinders, MidEngine, Year, Torque, and AWD. A total of seven variables.

#Subset Final Variables
finalvars <- allnumeric[,c(2,3,7,8,11:13,16)]
finalcormatrix  <- corrplot(cor(finalvars), type = "upper", method = "number")


#----------------------------------------------------------------------#

#Comment Investigation -
#Cylinders (4, 6, 8, 10, 12), Drivetrain (AWD, RWD, FWD), Engine Layout (Mid, Front, Rear), need to investigate comments from before about the differences 
#Torque, Year, Weight, Horsepower --> Is it linear? Do they ressemble linear relationships?

CylindersComparison <- by(allnumeric[,c(2,3,7,8,11:13,16)], allnumeric$Cylinders, summary)
DrivetrainComparison <- by(cleandata[,c(2,6,12,13,18:20,23)], cleandata$Drivetrain, summary)
EngineLayoutComparison <- by(cleandata[,c(2,6,12,13,18:20,23)], cleandata$Engine_Layout, summary)

CylindersComparison #The newer cars feature fewer cylinders (4,6,8), HP and torque increases as cylinders increase, no noticeable impact on time, weight increases with cylinders, more mid-engine as cylinders also increase
#V10s are the exception, some outliers exist here...fewer models (10), not a popular engine to make
DrivetrainComparison #AWD has best HP, Torque, and time. Suffers in the Weight category (more complicated system/setup). More likely to be Mid-Engine with more Cylinders
EngineLayoutComparison #Mid-Engine rates better on almost every metric, advantages are very clear

plot(cleandata$Year, cleandata$Mins2Secs) #Generally negative linear relation
plot(cleandata$Weight, cleandata$Mins2Secs) #Generally positive linear relation
plot(cleandata$Horsepower, cleandata$Mins2Secs) #Generally negative linear relation
plot(cleandata$Torque, cleandata$Mins2Secs) #Generally negative linear relation

#----------------------------------------------------------------------#

#Basic Model, MLR with final vars
finalvarsmodel <- lm(Mins2Secs~., finalvars)
summary(finalvarsmodel)
#Most vars behaving in the expected manner, with the exception of Mid-Engine, Cylinders, Torque

#Making clusters for different archetypes of cars and determining the optimal amount of clusters
library(NbClust)
res.nbclust <- NbClust(finalvars, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all") #Three was the ideal number
km3f <- kmeans(finalvars, centers = 3, nstart = 100)
km3f
finalvarscluster <- finalvars
finalvarscluster$cluster <- km3f$cluster

#Modified Model, MLR with final vars+clusters
finalvarsmodelcluster <- lm(Mins2Secs~., finalvarscluster)
summary(finalvarsmodelcluster)

#----------------------------------------------------------------------#

#Model Performance

#Basic MLR
plot(finalvarsmodel)
difference = predict(finalvarsmodel) - finalvars$Mins2Secs
plot(difference)

#Modified MLR w/clusters
plot(finalvarsmodelcluster)
differencecluster = predict(finalvarsmodelcluster) - finalvars$Mins2Secs
plot(differencecluster)
